image: docker:latest
services:
  - docker:dind
 before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY


stages:
  - build
  - lint
  - test

# This file is a template, and might need editing before it works on your project.
docker-build:
  # Official docker image.
  stage: build
   allow_failure: false
  script:
    # Setup docker-compose
    - cd ./fleetmanagement
    - apk add --no-cache docker-compose
    # Build containers
    - echo "Starting build..."
    - docker-compose build
    - docker-compose up  -d 
    # Composer and DB setup
    - echo "Running Docker exec commands..."
    - docker-compose exec -T app bash -c "composer install"
    - docker-compose exec -T app bash -c "php artisan config:cache"
    - docker-compose exec -T app bash -c "php artisan db:seed"
  artifacts:
    expire_in: 60 minutes

php-linter:
  stage: lint
  image: pipelinecomponents/php-linter:latest
  allow_failure: true
  script:
    - cd ./fleetmanagement
    - echo "Running linter..."
    - parallel-lint --colors .
  artifacts:
    expire_in: 60 minutes


laravel-test:
  stage: test
  services:
    - docker:dind
  allow_failure: false
  script:
    - cd ./fleetmanagement
    - apk add --no-cache docker-compose
    - echo "Running tests..."
    # Start phpunit
    - docker-compose exec -T app bash -c "vendor/bin/phpunit ./tests"

